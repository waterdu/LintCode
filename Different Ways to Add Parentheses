Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are +, - and *.

Example 1:

Input: "2-1-1"
Output: [0, 2]
Explanation: 
((2-1)-1) = 0 
(2-(1-1)) = 2


class Solution:
    def diffWaysToCompute(self, input):
        """
        :type input: str
        :rtype: List[int]
        """
        if input.isdigit():
            return [int(input)]
        res = []
        for i in range(len(input)):
            if input[i] in "-+*":
                leftList = self.diffWaysToCompute(input[:i])
                rightList = self.diffWaysToCompute(input[i+1:])
                for j in leftList:
                    for k in rightList:
                        res.append(self.helper(j,k, input[i]))
        return res
    
    def helper(self, m, n, op):
        if op == "-":
            return m - n
        elif op == "+":
            return m + n
        else:
            return m * n
