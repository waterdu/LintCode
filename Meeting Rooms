Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei),
determine if a person could attend all meetings.

For example, Given [[0, 30],[5, 10],[15, 20]], return false.

/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
 
def canAttendMeetings(intervals):
    intervals.sort(key = lambda i:i.start)
    for i in in range(1, len(intervals), 1):
        if intervals[i].start < intervals[i - 1].end:
            return False
    return True
    
//java解法
class Solution {
    
    //this problem is determine whether there's a conflit
    
    public boolean canAttendMeetings(Interval[] intervals) {
        if(intervals == null || intervals.length == 0) {
            return true;
        }
        Arrays.sort(intervals, new Comparator<Interval>() {
            public int compare(Interval a, Interval b) {
                return a.start - b.start;
            }
        });
        for(int i = 1; i < intervals.length; i++) {
            if(intervals[i].start < intervals[i - 1].end) {
                return false;
            }
        }
        return true;
    }
}
