// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    Integer next;
    Iterator<Integer> iterator;
	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
        this.iterator = iterator;
        if(this.iterator.hasNext()){
            this.next = this.iterator.next();
        }
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        return next;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
        if(hasNext()){
            Integer tmp = next;
            if(iterator.hasNext()) {
                next = iterator.next();
            } else {
                next = null;
            }
            return tmp;
        } else {
            return null;
        }        
	}

	@Override
	public boolean hasNext() {
	    return next != null;
	}
}
