 // Given an unsorted array of integers, find a subarray which adds to a given number.
 //If there are more than one subarrays with sum as the given number, print any of them.
  
  int subArraySum(int arr[], int n, int target) 
    {
        //  presume, index
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        int sum = 0;
        // Pick a starting point
        for (int i = 0; i < n; i++) 
        {
            // If curr_sum becomes equal to sum, then return true
            if (map.containsKey(sum - target)) 
            {
                int p = i-1;
                System.out.println("Sum found between indexes " + (map.get(sum - target) + 1)
                        + " and " + p);
                return 1;
            }
             
            // Add this element to curr_sum
              sum = sum + arr[i];
              map.put(sum, i);
        }
 
        System.out.println("No subarray found");
        return 0;
    }
