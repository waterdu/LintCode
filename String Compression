Implement a method to perform basic string compression using the counts of repeated characters. For example, the string aabcccccaaa would become a2b1c5a3.

If the "compressed" string would not become smaller than the original string, your method should return the original string.

Example
str=aabcccccaaa return a2b1c5a3
str=aabbcc return aabbcc
str=aaaa return a4

class Solution:
    """
    @param originalString: a string
    @return: a compressed string
    """
    def compress(self, originalString):
        # write your code here
        if not originalString or len(originalString) <= 2:
            return originalString
        res = ""
        count = 1
        for i in range(1, len(originalString)):
            if originalString[i] != originalString[i - 1]:
                res = res + originalString[i - 1] + str(count)
                count = 1
            else:
                count = count + 1
                
        if originalString[-1] != originalString[-2]:
            res = res + originalString[-1] + "1"
        else:
            res = res + originalString[-1] + str(count)
        
        if len(res) < len(originalString):
            return res
        return originalString
        return res
