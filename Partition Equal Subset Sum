class Solution(object):
    def canPartition(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        s = sum(nums) 
        target = sum(nums) / 2
        if target * 2 != s:
            return False
        visited = set()
        
        def dfs(tar, index):
            if tar < 0: return False
                        
            if index >= len(nums):
                return False
            if tar == 0:
                return True

            key = (tar, index)
            if key in visited:
                return False

            
            add = dfs(tar - nums[index], index + 1)
            notAdd = dfs(tar,index + 1)
            res = add or notAdd
            if not res:
                visited.add((tar, index))
            return res
    
        return dfs(target, 0)
但是这个超时了

