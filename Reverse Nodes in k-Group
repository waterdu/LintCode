/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        
        ListNode cur = dummy;
        while(cur != null) {
            cur = reverseNextK(cur, k);
        }
        
        return dummy.next;
    }
    
    //head -> n1 -> n2->nk ... nk+1
    //head -> nk ->nk - 1 ...n1 -> nk+1
    // return n1
    private ListNode reverseNextK(ListNode head, int k) {
        ListNode n1 = head.next;
        ListNode nk = head;
        for(int i = 0; i < k; i++) {
            nk = nk.next;
            if(nk == null) {
                return null;
            }
        }
        //reverse
        ListNode nkplus = nk.next;
        ListNode prev = null;
        ListNode cur = n1;
        while(cur != nkplus) {
            ListNode tmp = cur.next;
            cur.next = prev;
            prev = cur;
            cur = tmp;
        }
        
        //connect
        head.next = nk;
        n1.next = nkplus;
        
        return n1;
    }
}
