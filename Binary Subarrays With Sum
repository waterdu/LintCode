In an array A of 0s and 1s, how many non-empty subarrays have sum S?

Example 1:

Input: A = [1,0,1,0,1], S = 2
Output: 4
Explanation: 
The 4 subarrays are bolded below:
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]
 

Note:

A.length <= 30000
0 <= S <= A.length
A[i] is either 0 or 1.

//解法
Count the occurrence of all prefix sum.

class Solution(object):
    def numSubarraysWithSum(self, A, S):
        c = collections.Counter({0:1})
        presum = res = 0
        for i in A:
            presum += i
            res += c[presum - S]
            c[presum] += 1
        return res
