Given a string, you need to reverse the order of characters in each word within a sentence 
while still preserving whitespace and initial word order.

Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, each word is separated by single space and there will not be any extra space in the string.

    def reverseWords(self, s):
        """
        :type s: str
        :rtype: str
        """
        return ' '.join(x[::-1] for x in s.split())
        
class Solution {
    public String reverseWords(String s) {
        String[] str = s.split(" ");
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < str.length; i++) {
            result.append(new StringBuilder(str[i]).reverse()).append(" ");
        }
        return result.toString().trim();
    }
}
//不用trim解法
class Solution {
    public String reverseWords(String s) {
        String[] str = s.split(" ");
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < str.length; i++) {
            result.append(new StringBuilder(str[i]).reverse());
            if (i != str.length - 1) {
                result.append(" ");
            }
        }
        return result.toString();
    }
}
