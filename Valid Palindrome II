//Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.
class Solution {
    public boolean validPalindrome(String s) {
        if(s == null) {
            return false;
        }
        if(s.length() == 0) {
            return true;
        }
        int left = 0;
        int right = s.length() - 1;
        while (left < right) {
            if(s.charAt(left) != s.charAt(right)){
                return isPalindrome(s, left, right - 1) || isPalindrome(s, left + 1, right);
            } else {
                left++;
                right--;
            }
        }
        return true;
    }
    private boolean isPalindrome(String s, int left, int right){
        if(left == right) {
            return true;
        }
        while(left < right) {
            if(s.charAt(left) != s.charAt(right)){
                return false;
            } else {
                left++;
                right--;
            }
        }
        return true;
    }
}
