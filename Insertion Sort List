Sort a linked list using insertion sort.
从第一个元素开始，该元素可以认为已经被排序
取出下一个元素，在已经排序的元素序列中从后向前扫描
如果该元素（已排序）大于新元素，将该元素移到下一位置
重复步骤3，直到找到已排序的元素小于或者等于新元素的位置
将新元素插入到该位置后
重复步骤2~5

class Solution(object):
    def insertionSortList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # 4,2,1,3
        if not head:
            return head
        dummy = ListNode(0)
        cur = head # 2
        while cur:
            next = cur.next # 1
            # find the place to insert
            pre = dummy
            #     3                 3 < 2 not
            while pre.next and pre.next.val < cur.val:
                pre = pre.next
            # insert
            cur.next = pre.next
            pre.next = cur
     
            cur = next
        return dummy.next
    
