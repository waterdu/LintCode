class Solution {
    public int myAtoi(String str) {
        if(str == null || str.length() == 0) {
            return 0;
        }
        //discards all leading whitespaces
        //sign of the number
        //overflow
        //invalid input
        int sign = 1;
        int base = 0;
        int n = str.length();
        int i = 0;
        while(i < n && str.charAt(i) == ' ') {
            i++;
        }
        if(i < n && str.charAt(i) == '-') {
            sign = -1;
            i++;
        } else if(i < n && str.charAt(i) == '+') {
            i++;
        }
        
        while(i < n && str.charAt(i) >='0' && str.charAt(i) <= '9') {
            //check if total will be overflow after 10 times and add digit
            if (base > Integer.MAX_VALUE / 10 || (base == Integer.MAX_VALUE / 10 && str.charAt(i) - '0' > Integer.MAX_VALUE % 10)) {
                if(sign == 1) {
                    return Integer.MAX_VALUE;
                } else {
                    return Integer.MIN_VALUE;
                }
            }
            base = base * 10 + str.charAt(i) - '0';
            i++;
        }
        return sign * base;
        
    }
}
