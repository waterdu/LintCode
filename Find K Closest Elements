Assume we are taking A[i] ~ A[i + k -1].
We can binary research i
We compare the distance between x - A[mid] and A[mid - k] - x

If x - A[mid] > A[mid + k] - x,
it means A[mid + 1] ~ A[mid + k] is better than A[mid] ~ A[mid + k - 1],
and we have mid smaller than the right i.
So assign left = mid + 1.

Reversely, it's similar.


Time Complexity:
O(log(N - K))
It's funny that when K increases,
the time complexity decrease instead.

class Solution(object):
    def findClosestElements(self, arr, k, x):
        """
        :type arr: List[int]
        :type k: int
        :type x: int
        :rtype: List[int]
        """
        left = 0
        right = len(arr) - k
        while left < right:
            mid = (left + right) /2
            if abs(x - arr[mid]) > abs(arr[mid + k] - x):
                left = mid+1
            else:
                right = mid
        return arr[left:left + k]
