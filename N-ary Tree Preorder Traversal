589. N-ary Tree Preorder Traversal
Share
Given an n-ary tree, return the preorder traversal of its nodes' values.

For example, given a 3-ary tree:
Return its preorder traversal as: [1,3,5,6,2,4].

"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, children):
        self.val = val
        self.children = children
"""
class Solution(object):
    def preorder(self, root):
        """
        :type root: Node
        :rtype: List[int]
        """
        res = []
        if not root:
            return res
        self.dfs(root, res)
        return res
        
    def dfs(self, root, res):
        if not root:
            return
        res.append(root.val)
        if root.children:
            for c in root.children:
                 self.dfs(c, res)
 // stack解法
 """
# Definition for a Node.
class Node(object):
    def __init__(self, val, children):
        self.val = val
        self.children = children
"""
class Solution(object):
    def preorder(self, root):
        """
        :type root: Node
        :rtype: List[int]
        """
        res = []
        if not root:
            return res
        stack = [root]
        self.dfs(stack, res)
        return res
        
    def dfs(self, stack, res):
        while stack:
            cur = stack.pop()
            res.append(cur.val)
            if cur.children:
                stack += [c for c in cur.children[::-1]]
                 
